import {addProjectAndReinitialize} from "../script.js";
  
const projects = [
  //start portuguese
[  {
    title: "Plataforma de Pagamentos Escrow (PAGOW)",
    description: "Desenvolvi um sistema usando React Native para o frontend e ExpressJS para o backend, aplicando técnicas de testes automatizados com Jest. Este projeto foi a conclusão do meu curso e demonstra habilidades em desenvolvimento mobile e backend, com ênfase em testes para garantir a qualidade do software.",
    technologies: ["React Native", "ExpressJS", "Jest"],
    projectUrl: "https://pagow.vercel.app/",
    sourceInfo: "github",
    sourceCodeUrl: "https://github.com/MapieMamunhe/pagow",
    imageUrl: "assets/images/work/final-project.png",
    imageAlt: "Screenshot for Final Project"
  },
  {
    title: "Sistema de gestão de reservas",
    description: "Sistema de gestão de reservas de quartos de hotel: Gerir facilmente quartos e clientes com atribuições automáticas de quartos por tipo. Notificações instantâneas sobre a disponibilidade de quartos e um painel de administração com informações importantes. Geração de recibos personalizados para cada hóspede",
    technologies: ["PHP", "MYSQL", "Laravel", "Bootstrap", "Vite", "Hospedagem em Servidor compartilhado"],
    imageUrl: "assets/images/work/reservation-system.png",
    imageAlt: "Screenshot for Reservation System"
  },
  {
    title: "Sistema de Vendas",
    description: "Um sistema de vendas personalizável que aprimora suas operações com uma interface intuitiva e relatórios semanais detalhados. Adaptável aos seus fluxos de trabalho específicos, utiliza AWS, Spring Boot, AngularJS, Docker e Java para otimizar processos e auxiliar na tomada de decisões informadas.",
    technologies: ["Hospedagem - AWS EC2", "Spring Boot", "AngularJS", "Docker", "Java"],
    imageUrl: "assets/images/work/sale-system.png",
    imageAlt: "Screenshot for Sales System"
  },
  {
    title: "API de Loteria",
    description: "Desenvolvi uma API robusta em Node.js com TypeScript para gerenciamento de loterias. Suporta criação e consulta de palpites e resultados, com autenticação JWT segura. A documentação é gerada automaticamente pelo Swagger e a validação é feita com Zod para garantir a integridade dos dados. Utiliza SQL Server para armazenamento e é hospedada em um VPS, oferecendo alta disponibilidade e controle total do ambiente.",
    technologies: ["Node.js", "TypeScript", "JWT", "Swagger", "Zod", "SQL Server", "Hospedagwm VPS"],
    imageUrl: "assets/images/work/lottery-api.png",
    imageAlt: "Screenshot for Lottery API"
  },
],//end portuguese
//start english
  [
    {
      title: "Escrow Payment Platform (PAGOW)",
      description: "I developed a system using React Native for the frontend and ExpressJS for the backend, applying automated testing techniques with Jest. This project was the culmination of my course and demonstrates skills in mobile and backend development, with a focus on testing to ensure software quality.",
      technologies: ["React Native", "ExpressJS", "Jest"],
      projectUrl: "https://pagow.vercel.app/",
      sourceInfo: "github",
      sourceCodeUrl: "https://github.com/MapieMamunhe/pagow",
      imageUrl: "assets/images/work/final-project.png",
      imageAlt: "Screenshot for Final Project"
    },
    {
      title: "Reservation Management System",
      description: "Hotel room reservation management system: Easily manage rooms and clients with automatic room assignments by type. Instant notifications about room availability and an administration panel with important information. Custom receipt generation for each guest.",
      technologies: ["PHP", "MYSQL", "Laravel", "Bootstrap", "Vite", "Shared Hosting"],
      imageUrl: "assets/images/work/reservation-system.png",
      imageAlt: "Screenshot for Reservation System"
    },
    {
      title: "Sales System",
      description: "A customizable sales system that enhances your operations with an intuitive interface and detailed weekly reports. Adaptable to your specific workflows, it uses AWS, Spring Boot, AngularJS, Docker, and Java to optimize processes and assist in making informed decisions.",
      technologies: ["Hosting - AWS EC2", "Spring Boot", "AngularJS", "Docker", "Java"],
      imageUrl: "assets/images/work/sale-system.png",
      imageAlt: "Screenshot for Sales System"
    },
    {
      title: "Lottery API",
      description: "I developed a robust API in Node.js with TypeScript for lottery management. It supports creation and querying of bets and results, with secure JWT authentication. Documentation is automatically generated by Swagger, and validation is done with Zod to ensure data integrity. It uses SQL Server for storage and is hosted on a VPS, offering high availability and full control of the environment.",
      technologies: ["Node.js", "TypeScript", "JWT", "Swagger", "Zod", "SQL Server", "VPS Hosting"],
      imageUrl: "assets/images/work/lottery-api.png",
      imageAlt: "Screenshot for Lottery API"
    },
  ]//end english
];

projects[1].forEach(project => addProjectAndReinitialize(project));

